{"version":3,"file":"kanmi-perf-pro.esm.js","sources":["../src/config.js","../src/kanmi-perf-pro.js"],"sourcesContent":["export const KanmiPerfConfig = {\n    thresholds: {\n      LCP: { good: 2500, needsImprovement: 4000 },\n      CLS: { good: 0.1, needsImprovement: 0.25 },\n      TTFB: { good: 800, needsImprovement: 1800 },\n      INP: { good: 200, needsImprovement: 500 },\n      FCP: { good: 1800, needsImprovement: 3000 },\n      LongTasks: { good: 150, needsImprovement: 300 }\n    },\n    weights: {\n      LCP: 0.25,\n      CLS: 0.2,\n      TTFB: 0.2,\n      INP: 0.2,\n      FCP: 0.15\n    }\n  };","import { KanmiPerfConfig } from './config.js';\n// ────────────────────────────────────────────────────────────────────────────\n//  LICENSING\n// ────────────────────────────────────────────────────────────────────────────\nconst LICENSE_ENDPOINT = 'https://www.knfrmd.com/api/license/validate';\nlet __kanmiPerfLicenseValid = false;\n\n/**\n * Validate a KanmiPerf Pro licence key.\n * Resolves to **true** if valid, **false** otherwise.\n */\nasync function validateLicense(key) {\n  try {\n    const res = await fetch(\n      `${LICENSE_ENDPOINT}?key=${encodeURIComponent(key)}`\n    );\n    const data = await res.json();\n    __kanmiPerfLicenseValid = !!data?.valid;\n  } catch (err) {\n    console.warn(\n      '[KanmiPerf Pro] Licence validation failed – running in demo mode.',\n      err\n    );\n    __kanmiPerfLicenseValid = false;\n  }\n  return __kanmiPerfLicenseValid;\n}\n\nconst KanmiPerf = () => {\n  const perf = {};\n  perf._observers = [];\n  perf._longTaskQueue = [];\n  perf._loafEntries = [];\n  perf._longTaskTimer = null;\n\n  // Initialize persistent log and timeline arrays for export and debugging.\n  window.__kanmiVitalsLog = window.__kanmiVitalsLog || [];\n  perf.timeline = [];\n  // Store final metrics and a short list of issues.\n  perf.metrics = {\n    FCP: 0, \n    LCP: 0,\n    CLS: 0,\n    INP: 0,\n    TTFB: 0,\n    LoAF: [],\n    LongTasks: []\n  };\n  perf.issues = [];\n\n  perf.getReport = () => {\n    return {\n      metrics: perf.metrics,\n      issues: perf.issues,\n      timeline: perf.timeline,\n      env: {\n        userAgent: navigator.userAgent,\n        connection: navigator.connection?.effectiveType || 'unknown',\n        device: window.innerWidth < 768 ? 'mobile' : 'desktop'\n      }\n    };\n  };\n\n  const getScore = (value, good, poor) => {\n    if (value <= good) return \"✅ Good\";\n    if (value <= poor) return \"🟡 Needs Improvement\";\n    return \"🚨 Poor\";\n  };\n\n  /**\n   * Returns status strings for each metric based on configured thresholds.\n   * @returns {Object} Mapping of metric names to status emojis and labels.\n   */\n  perf.getScores = () => {\n    const t = KanmiPerfConfig.thresholds;\n    return {\n      LCP: getScore(perf.metrics.LCP, t.LCP.good, t.LCP.needsImprovement),\n      CLS: getScore(perf.metrics.CLS, t.CLS.good, t.CLS.needsImprovement),\n      TTFB: getScore(perf.metrics.TTFB, t.TTFB.good, t.TTFB.needsImprovement),\n      INP: getScore(perf.metrics.INP, t.INP.good, t.INP.needsImprovement),\n      FCP: getScore(perf.metrics.FCP, t.FCP.good, t.FCP.needsImprovement)\n    };\n  };\n\n  /**\n   * Computes an overall page score out of 100 based on weighted metric statuses.\n   * @returns {number} Rounded page score.\n   */\n  perf.getPageScore = () => {\n    const scores = perf.getScores();\n    const w = KanmiPerfConfig.weights;\n    let total = 0;\n    const statusToScore = {\n      \"✅ Good\": 100,\n      \"🟡 Needs Improvement\": 60,\n      \"🚨 Poor\": 20\n    };\n    for (const metric in w) {\n      const status = scores[metric] || \"🟡 Needs Improvement\";\n      total += w[metric] * (statusToScore[status] || 50);\n    }\n    return Math.round(total);\n  };\n\n  /** Utility Logger **/\n  perf.log = (type, issues) => {\n    const timestamp = new Date().toISOString();\n    console.groupCollapsed(`[KanmiPerf 🚀] ⚠️ ${type} at ${timestamp}`);\n    issues.forEach(issue => console.log(`- ${issue}`));\n    console.groupEnd();\n\n    // Store logs for export and timeline analysis.\n    window.__kanmiVitalsLog.push({ type, issues, timestamp });\n    perf.timeline.push({ type, issues, time: performance.now() });\n\n    // Also, accumulate a short version in perf.issues.\n    issues.forEach(msg => {\n      perf.issues.push(`[${type}] ${msg}`);\n    });\n  };\n\n  /** Page Name **/\n  perf.pageName = () => {\n    const canonicalLinks = [...document.querySelectorAll('link[rel=\"canonical\"]')];\n    const canonicalHrefs = canonicalLinks.map(link => link.href);\n    perf.log(\"Page\", canonicalHrefs);\n  };\n\n  /** DOM Analysis **/\n  perf.domAnalysis = () => {\n    const imgs = [...document.querySelectorAll(\"img:not([width]), img:not([height])\")];\n      if (imgs.length) {\n        perf.log(\"DOM Issues\", [\n          `${imgs.length} image${imgs.length > 1 ? \"s\" : \"\"} missing dimensions (causes CLS)`\n        ]);\n      }\n    // Check for images missing alt attributes (accessibility)\n    const imgsNoAlt = [...document.querySelectorAll(\"img:not([alt])\")];\n    if (imgsNoAlt.length) {\n      perf.log(\"DOM Accessibility Issues\", [\n        `${imgsNoAlt.length} image${imgsNoAlt.length > 1 ? \"s\" : \"\"} missing alt text`\n      ]);\n    }\n    // Check for excessive inline styles (performance / maintainability)\n    const inlineStyled = [...document.querySelectorAll(\"[style]\")];\n    if (inlineStyled.length) {\n      perf.log(\"DOM Styling Issues\", [\n        `${inlineStyled.length} element${inlineStyled.length > 1 ? \"s\" : \"\"} with inline styles`\n      ]);\n    }\n    // Check for deep DOM nesting\n    const maxDepth = (node, depth = 0) => {\n      if (!node.children || node.children.length === 0) return depth;\n      return Math.max(...[...node.children].map(child => maxDepth(child, depth + 1)));\n    };\n    const depth = maxDepth(document.body);\n    if (depth > 10) {\n      perf.log(\"DOM Structure Issues\", [\n        `DOM nesting depth is ${depth}, which may hurt performance`\n      ]);\n    }\n  };\n\n  /** <head> Analysis **/\n  perf.headAnalysis = () => {\n    const suggestions = [];\n    const headScripts = [...document.head.querySelectorAll(\"script[src]\")];\n    const blockingScripts = headScripts.filter(script => !script.defer && !script.async);\n    if (blockingScripts.length) {\n      suggestions.push(\n        `${blockingScripts.length} blocking script${blockingScripts.length > 1 ? \"s\" : \"\"} without async/defer`,\n        ...blockingScripts.map(script => `Suggest moving ${script.src} lower or load it with async/defer`)\n      );\n    }\n    const headHTML = document.head?.outerHTML || \"\";\n    const headSizeKB = (headHTML.length / 1024).toFixed(1);\n    if (headHTML.length > 8000) {\n      suggestions.push(`The <head> section is large (${headSizeKB} KB)`, \"→ Consider optimizing it.\");\n    }\n    if (suggestions.length > 0) {\n      perf.log(\"<head> Issues\", suggestions);\n    }\n  };\n\n  /** Third-party Script Detection **/\n  perf.thirdPartyAnalysis = () => {\n    const host = location.hostname;\n    const scripts = [...document.scripts].filter(s => s.src && !s.src.includes(host));\n    const syncScripts = scripts.filter(s => !s.defer && !s.async);\n    if (syncScripts.length) {\n      perf.log(\"Third-party Issues\", syncScripts.map(script => {\n        const hostname = new URL(script.src).hostname;\n        return `${hostname} synchronously loaded, delays rendering → Suggest loading async/defer or using Partytown`;\n      }));\n    }\n  };\n\n  /** First Contentful Paint (FCP) Monitoring **/\n    perf.monitorFCP = () => {\n      if (!PerformanceObserver.supportedEntryTypes.includes(\"paint\")) return;\n      let fcpEntry;\n      const observer = new PerformanceObserver(list => {\n        list.getEntries().forEach(entry => {\n          if (entry.name === \"first-contentful-paint\") {\n            fcpEntry = entry;\n          }\n        });\n      });\n      observer.observe({ type: \"paint\", buffered: true });\n      perf._observers.push(observer);\n      document.addEventListener(\"visibilitychange\", () => {\n        if (document.visibilityState === \"hidden\" && fcpEntry) {\n          const fcpTime = Math.round(fcpEntry.startTime);\n          perf.log(\"FCP\", [\n            `First Contentful Paint: ${fcpTime}ms`,\n            \"→ Ensure critical resources are loaded efficiently.\"\n          ]);\n          perf.metrics.FCP = fcpTime;\n        }\n      });\n    };\n\n  /** Long Task Monitoring **/\n  perf.monitorLongTasks = () => {\n    if (!(\"PerformanceObserver\" in window)) return;\n    const longTasks = [];\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (entry.duration > 50) {\n          const duration = Math.round(entry.duration);\n          let verdict = \"🟡 Minor\";\n          if (duration > 200) verdict = \"🚨 Severe\";\n          else if (duration > 125) verdict = \"⚠️ Moderate\";\n          perf.log(\"Long Task\", [\n            `${verdict} – Main thread blocked for ${duration}ms`,\n            \"→ Break into smaller functions, use requestIdleCallback or Web Workers for heavy work\"\n          ]);\n          longTasks.push(duration);\n        }\n      });\n    });\n    observer.observe({ type: \"longtask\", buffered: true });\n    perf.metrics.LongTasks = longTasks;\n  };\n\n  /** Long Animation Frame (LoAF) Monitoring **/\n  perf.monitorLoAF = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"long-animation-frame\")) return;\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        const { duration, blockingDuration, renderTime, styleAndLayoutDuration } = entry;\n        // Record each LoAF entry as an object for later analysis/export\n        const loafObj = {\n          duration: Number.isFinite(duration) ? Math.round(duration) : null,\n          blockingDuration: Number.isFinite(blockingDuration) ? Math.round(blockingDuration) : null,\n          renderTime: Number.isFinite(renderTime) ? Math.round(renderTime) : null,\n          styleAndLayoutDuration: Number.isFinite(styleAndLayoutDuration) ? Math.round(styleAndLayoutDuration) : null,\n          timestamp: Date.now()\n        };\n        perf._loafEntries.push(loafObj);\n        perf.metrics.LoAF.push(loafObj);\n        const safeNumber = (num) => Number.isFinite(num) ? Math.round(num) : \"N/A\";\n        let messages = [\n          `Duration: ${safeNumber(duration)}ms, Blocking: ${safeNumber(blockingDuration)}ms`,\n          `Render: ${safeNumber(renderTime)}ms, Layout: ${safeNumber(styleAndLayoutDuration)}ms`\n        ];\n        if (renderTime === undefined || styleAndLayoutDuration === undefined) {\n          messages.push(\"Note: Browser does not support detailed render/layout metrics for LoAF entries.\");\n        }\n        messages.push(\"→ Investigate heavy scripts or CSS causing recalculations\");\n        perf.log(\"LoAF Detected\", messages);\n        if (window.KanmiPerfDebug) {\n          console.debug(\"[KanmiPerf Debug] LoAF entry:\", loafObj);\n        }\n      });\n    });\n    observer.observe({ type: \"long-animation-frame\", buffered: true });\n  };\n\n  /** INP Monitoring **/\n  perf.monitorINP = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"event\")) return;\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (entry.duration > 300) {\n          let msg = [`${entry.name} delayed interaction response by ${Math.round(entry.duration)}ms`];\n          if (entry.target) {\n            try {\n              const html = entry.target.outerHTML?.slice(0, 100) || `[${entry.target.nodeName}]`;\n              msg.push(`Element: ${html}`);\n              entry.target.style.outline = \"2px solid purple\";\n              setTimeout(() => entry.target.style.outline = \"\", 2500);\n            } catch (e) {\n              msg.push(\"Element: [unreadable]\");\n            }\n          }\n          msg.push(\"→ Optimize interaction handlers. Avoid blocking JS, reflows, and heavy tasks.\");\n          perf.log(\"INP Interaction Issue\", msg);\n          perf.metrics.INP = Math.round(entry.duration);\n        }\n      });\n    });\n    observer.observe({ type: \"event\", durationThreshold: 300, buffered: true });\n  };\n\n  /** Largest Contentful Paint (LCP) Monitoring **/\n  perf.monitorLCP = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"largest-contentful-paint\")) return;\n    let lcpEntry;\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        lcpEntry = entry;\n        console.debug(\"[KanmiPerf Debug] LCP entry captured:\", entry);\n      });\n    });\n    observer.observe({ type: \"largest-contentful-paint\", buffered: true });\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"hidden\" && lcpEntry) {\n        const lcpTime = Math.round(lcpEntry.renderTime || lcpEntry.loadTime);\n        let elementInfo = lcpEntry.element ? lcpEntry.element.outerHTML.slice(0, 100) : \"N/A\";\n        if (lcpEntry.element) {\n          lcpEntry.element.style.outline = \"2px solid red\";\n          setTimeout(() => { lcpEntry.element.style.outline = \"\"; }, 3000);\n        }\n        perf.log(\"LCP\", [\n          `Largest Contentful Paint: ${lcpTime}ms`,\n          `Element: ${elementInfo}`,\n          \"→ Optimize images, text, and video content for faster loading\"\n        ]);\n        perf.metrics.LCP = lcpTime;\n      }\n    });\n  };\n\n  /** Cumulative Layout Shift (CLS) Monitoring **/\n  perf.monitorCLS = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"layout-shift\")) return;\n    let clsValue = 0;\n    let clsSources = [];\n    const shiftNodes = [];\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (!entry.hadRecentInput && entry.value > 0) {\n          clsValue += entry.value;\n          (entry.sources || []).slice(0, 3).forEach(src => {\n            try {\n              if (src.node && src.node.outerHTML) {\n                clsSources.push(src.node.outerHTML.slice(0, 100));\n                shiftNodes.push(src.node);\n              } else {\n                clsSources.push(\"[Unknown Source]\");\n              }\n            } catch (e) {\n              clsSources.push(\"[Error Reading Source]\");\n            }\n          });\n          console.debug(\"[KanmiPerf Debug] Layout shift entry:\", entry);\n        }\n      });\n    });\n    observer.observe({ type: \"layout-shift\", buffered: true });\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"hidden\") {\n        const roundedCLS = +clsValue.toFixed(3);\n        let verdict = \"Good\";\n        if (roundedCLS > 0.25) verdict = \"Poor\";\n        else if (roundedCLS > 0.1) verdict = \"Needs Improvement\";\n        const messages = [\n          `Cumulative Layout Shift: ${roundedCLS} (${verdict})`,\n          \"→ Consider reserving space for images, ads, embeds, or dynamic content to reduce unexpected shifts.\"\n        ];\n        if (clsSources.length) {\n          messages.push(`Top shifting elements: ${clsSources.join(\" | \")}`);\n        }\n        perf.log(\"CLS\", messages);\n        perf.metrics.CLS = roundedCLS;\n        shiftNodes.forEach(node => {\n          if (node && node.style) {\n            node.style.outline = \"2px dashed orange\";\n            setTimeout(() => node.style.outline = \"\", 3000);\n          }\n        });\n      }\n    });\n  };\n\n  /** Merged TTFB & <head> Analysis **/\n  perf.timingAnalysis = () => {\n    const navEntry = performance.getEntriesByType(\"navigation\")[0];\n    if (navEntry) {\n      const ttfb = Math.round(navEntry.responseStart);\n      // Use configurable thresholds for TTFB if provided.\n      const ttfbThresholds = KanmiPerfConfig.thresholds.TTFB;\n      const suggestions = [`Time To First Byte: ${ttfb}ms`];\n      if (ttfb <= ttfbThresholds.good) {\n        suggestions.push(\"TTFB is in the Good range.\");\n      } else if (ttfb <= ttfbThresholds.needsImprovement) {\n        suggestions.push(\"→ TTFB is slightly high. Review server response time and cache strategy.\");\n      } else {\n        suggestions.push(\"→ TTFB is very high. Optimize backend performance, CDN, and server-side rendering.\");\n      }\n      // Integrated head analysis:\n      const headHTML = document.head?.outerHTML || \"\";\n      const headSizeKB = (headHTML.length / 1024).toFixed(1);\n      if (headHTML.length > 10000) {\n        suggestions.push(`→ The <head> section is large (${headSizeKB} KB). Consider optimizing it.`);\n      }\n      // Further breakdown of <head> content:\n      const scriptTags = document.head.querySelectorAll(\"script\").length;\n      const inlineScripts = document.head.querySelectorAll(\"script:not([src])\").length;\n      const stylesheets = document.head.querySelectorAll(\"link[rel='stylesheet']\").length;\n      const styleBlocks = document.head.querySelectorAll(\"style\").length;\n      const preloadLinks = document.head.querySelectorAll(\"link[rel='preload']\").length;\n      if (scriptTags > 5) {\n        suggestions.push(`→ There are ${scriptTags} <script> tags in <head>. Consider deferring non-critical JS.`);\n      }\n      if (inlineScripts > 1) {\n        suggestions.push(`→ Multiple inline <script> blocks found. Consider externalizing where possible.`);\n      }\n      if (stylesheets > 3) {\n        suggestions.push(`→ ${stylesheets} stylesheets detected. Consolidate critical CSS to reduce requests.`);\n      }\n      if (styleBlocks > 1) {\n        suggestions.push(`→ ${styleBlocks} <style> blocks found. Inline styles can delay parsing.`);\n      }\n      if (preloadLinks > 5) {\n        suggestions.push(`→ ${preloadLinks} preload tags found. Verify they are used early to avoid wasted bytes.`);\n      }\n      perf.log(\"TTFB & <head> Analysis\", suggestions);\n      perf.metrics.TTFB = ttfb;\n    }\n  };\n\n  /** First Contentful Paint (FCP) Monitoring **/\n  perf.monitorFCP = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"paint\")) return;\n    let fcpEntry;\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (entry.name === \"first-contentful-paint\") {\n          fcpEntry = entry;\n        }\n      });\n    });\n    observer.observe({ type: \"paint\", buffered: true });\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"hidden\" && fcpEntry) {\n        const fcpTime = Math.round(fcpEntry.startTime);\n        perf.log(\"FCP\", [\n          `First Contentful Paint: ${fcpTime}ms`,\n          \"→ Ensure critical resources are loaded efficiently.\"\n        ]);\n        perf.metrics.FCP = fcpTime;\n      }\n    });\n  };\n\n  /** Timeline Debug **/\n  perf.analyzeTimeline = () => {\n    if (perf.timeline.length > 1) {\n      const sorted = [...perf.timeline].sort((a, b) => a.time - b.time);\n      const baseTime = sorted[0].time;\n      const timelineReport = sorted.map((event, i) => {\n        const delta = Math.round(event.time - baseTime);\n        return `${i + 1}. ${event.type} ➜ ${delta}ms`;\n      });\n      perf.log(\"Timeline Report\", timelineReport);\n    } else {\n      perf.log(\"Timeline Report\", [\"Insufficient data to generate timeline\"]);\n    }\n  };\n\n  /** Run All Analyses Manually **/\n  perf.run = () => {\n    perf.pageName();\n    perf.analyzeTimeline();\n    perf.domAnalysis();\n    perf.headAnalysis();\n    perf.thirdPartyAnalysis();\n    perf.monitorLongTasks();\n    perf.monitorLoAF();\n    perf.monitorINP();\n    perf.monitorLCP();\n    perf.monitorCLS();\n    perf.timingAnalysis();\n    perf.monitorFCP();\n  };\n\n  /** Initialization **/\n  /**\n   * Initialise KanmiPerf Pro\n   * @param {Object} [options]\n   * @param {string} [options.licenseKey] – your KanmiPerf Pro licence key\n   *\n   * A key can also be set globally as `window.KanmiPerfProLicenseKey`.\n   */\n  perf.init = async (options = {}) => {\n    const key = options.licenseKey || window.KanmiPerfProLicenseKey;\n    if (!key) {\n      console.error(\n        '[KanmiPerf Pro] ⚠️ No licenceKey provided. Purchase one at https://knfrmd.com/pricing'\n      );\n      return;\n    }\n\n    const valid = await validateLicense(key);\n    if (!valid) {\n      console.error('[KanmiPerf Pro] ⚠️ Licence key invalid. Aborting run.');\n      return;\n    }\n\n    // Original bootstrap\n    if (document.readyState === 'complete') {\n      perf.run();\n    } else {\n      window.addEventListener('load', perf.run);\n    }\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'hidden') {\n        perf.analyzeTimeline();\n      }\n    });\n  };\n\n// Global error monitoring to capture unhandled errors.\n  window.onerror = (msg, url, lineNo, columnNo, error) => {\n    const errorMessage = `${msg} at ${url}:${lineNo}:${columnNo}`;\n    perf.log(\"JS Error\", [errorMessage]);\n    return false;\n  };\n\n  window.KanmiPerf = perf;\n  return perf;\n};\nconst KanmiPerfInstance = KanmiPerf();\nexport default KanmiPerfInstance;\n"],"names":["KanmiPerfConfig","LCP","good","needsImprovement","CLS","TTFB","INP","FCP","__kanmiPerfLicenseValid","KanmiPerfInstance","perf","window","__kanmiVitalsLog","timeline","metrics","LoAF","LongTasks","issues","getReport","env","userAgent","navigator","connection","effectiveType","device","innerWidth","getScore","value","poor","getScores","t","getPageScore","scores","w","total","statusToScore","metric","status","Math","round","log","type","timestamp","Date","toISOString","console","groupCollapsed","forEach","issue","groupEnd","push","time","performance","now","msg","pageName","canonicalHrefs","document","querySelectorAll","map","link","href","domAnalysis","imgs","length","imgsNoAlt","inlineStyled","maxDepth","node","depth","children","max","child","body","headAnalysis","suggestions","blockingScripts","head","filter","script","defer","async","src","headHTML","outerHTML","headSizeKB","toFixed","thirdPartyAnalysis","host","location","hostname","syncScripts","scripts","s","includes","URL","monitorFCP","PerformanceObserver","supportedEntryTypes","fcpEntry","observer","list","getEntries","entry","name","observe","buffered","_observers","addEventListener","visibilityState","fcpTime","startTime","monitorLongTasks","longTasks","duration","verdict","monitorLoAF","blockingDuration","renderTime","styleAndLayoutDuration","loafObj","Number","isFinite","_loafEntries","safeNumber","num","messages","undefined","KanmiPerfDebug","debug","monitorINP","target","html","slice","nodeName","style","outline","setTimeout","e","durationThreshold","monitorLCP","lcpEntry","lcpTime","loadTime","elementInfo","element","monitorCLS","clsValue","clsSources","shiftNodes","hadRecentInput","sources","roundedCLS","join","timingAnalysis","navEntry","getEntriesByType","ttfb","responseStart","ttfbThresholds","scriptTags","inlineScripts","stylesheets","styleBlocks","preloadLinks","analyzeTimeline","sorted","sort","a","b","baseTime","timelineReport","event","i","delta","run","init","options","key","licenseKey","KanmiPerfProLicenseKey","error","valid","res","fetch","encodeURIComponent","data","json","err","warn","validateLicense","readyState","onerror","url","lineNo","columnNo","errorMessage","KanmiPerf"],"mappings":"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"}