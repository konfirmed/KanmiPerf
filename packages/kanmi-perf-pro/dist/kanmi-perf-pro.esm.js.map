{"version":3,"file":"kanmi-perf-pro.esm.js","sources":["../src/config.js","../src/kanmi-perf-pro.js"],"sourcesContent":["export const KanmiPerfConfig = {\n    thresholds: {\n      LCP: { good: 2500, needsImprovement: 4000 },\n      CLS: { good: 0.1, needsImprovement: 0.25 },\n      TTFB: { good: 800, needsImprovement: 1800 },\n      INP: { good: 200, needsImprovement: 500 },\n      FCP: { good: 1800, needsImprovement: 3000 },\n      LongTasks: { good: 150, needsImprovement: 300 }\n    },\n    weights: {\n      LCP: 0.25,\n      CLS: 0.2,\n      TTFB: 0.2,\n      INP: 0.2,\n      FCP: 0.15\n    }\n  };","import { KanmiPerfConfig } from './config.js';\n// ────────────────────────────────────────────────────────────────────────────\n//  LICENSING\n// ────────────────────────────────────────────────────────────────────────────\nconst LICENSE_ENDPOINT = 'https://kanmiperf.com/api/license/validate';\nlet __kanmiPerfLicenseValid = false;\n\n/**\n * Validate a KanmiPerf Pro licence key.\n * Resolves to **true** if valid, **false** otherwise.\n */\nasync function validateLicense(key) {\n  try {\n    const res = await fetch(\n      `${LICENSE_ENDPOINT}?key=${encodeURIComponent(key)}`\n    );\n    const data = await res.json();\n    __kanmiPerfLicenseValid = !!data?.valid;\n  } catch (err) {\n    console.warn(\n      '[KanmiPerf Pro] Licence validation failed – running in demo mode.',\n      err\n    );\n    __kanmiPerfLicenseValid = false;\n  }\n  return __kanmiPerfLicenseValid;\n}\n\nconst KanmiPerf = () => {\n  const perf = {};\n\n  // Initialize persistent log and timeline arrays for export and debugging.\n  window.__kanmiVitalsLog = window.__kanmiVitalsLog || [];\n  perf.timeline = [];\n  // Store final metrics and a short list of issues.\n  perf.metrics = {\n    FCP: 0, \n    LCP: 0,\n    CLS: 0,\n    INP: 0,\n    TTFB: 0,\n    LongTasks: []\n  };\n  perf.issues = [];\n\n  /** Utility Logger **/\n  perf.log = (type, issues) => {\n    const timestamp = new Date().toISOString();\n    console.groupCollapsed(`[KanmiPerf 🚀] ⚠️ ${type} at ${timestamp}`);\n    issues.forEach(issue => console.log(`- ${issue}`));\n    console.groupEnd();\n\n    // Store logs for export and timeline analysis.\n    window.__kanmiVitalsLog.push({ type, issues, timestamp });\n    perf.timeline.push({ type, issues, time: performance.now() });\n\n    // Also, accumulate a short version in perf.issues.\n    issues.forEach(msg => {\n      perf.issues.push(`[${type}] ${msg}`);\n    });\n  };\n\n  /** DOM Analysis **/\n  perf.domAnalysis = () => {\n    const imgs = [...document.querySelectorAll(\"img:not([width]), img:not([height])\")];\n    if (imgs.length) {\n      perf.log(\"DOM Issues\", [\n        `${imgs.length} image${imgs.length > 1 ? \"s\" : \"\"} missing dimensions (causes CLS)`\n      ]);\n    }\n  };\n\n  /** <head> Analysis **/\n  perf.headAnalysis = () => {\n    const suggestions = [];\n    const headScripts = [...document.head.querySelectorAll(\"script[src]\")];\n    const blockingScripts = headScripts.filter(script => !script.defer && !script.async);\n    if (blockingScripts.length) {\n      suggestions.push(\n        `${blockingScripts.length} blocking script${blockingScripts.length > 1 ? \"s\" : \"\"} without async/defer`,\n        ...blockingScripts.map(script => `Suggest moving ${script.src} lower or load it with async/defer`)\n      );\n    }\n    const headHTML = document.head?.outerHTML || \"\";\n    const headSizeKB = (headHTML.length / 1024).toFixed(1);\n    if (headHTML.length > 8000) {\n      suggestions.push(`The <head> section is large (${headSizeKB} KB)`, \"→ Consider optimizing it.\");\n    }\n    if (suggestions.length > 0) {\n      perf.log(\"<head> Issues\", suggestions);\n    }\n  };\n\n  /** Third-party Script Detection **/\n  perf.thirdPartyAnalysis = () => {\n    const host = location.hostname;\n    const scripts = [...document.scripts].filter(s => s.src && !s.src.includes(host));\n    const syncScripts = scripts.filter(s => !s.defer && !s.async);\n    if (syncScripts.length) {\n      perf.log(\"Third-party Issues\", syncScripts.map(script => {\n        const hostname = new URL(script.src).hostname;\n        return `${hostname} synchronously loaded, delays rendering → Suggest loading async/defer or using Partytown`;\n      }));\n    }\n  };\n\n  /** Long Task Monitoring **/\n  perf.monitorLongTasks = () => {\n    if (!(\"PerformanceObserver\" in window)) return;\n    const longTasks = [];\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (entry.duration > 50) {\n          const duration = Math.round(entry.duration);\n          let verdict = \"🟡 Minor\";\n          if (duration > 200) verdict = \"🚨 Severe\";\n          else if (duration > 125) verdict = \"⚠️ Moderate\";\n          perf.log(\"Long Task\", [\n            `${verdict} – Main thread blocked for ${duration}ms`,\n            \"→ Break into smaller functions, use requestIdleCallback or Web Workers for heavy work\"\n          ]);\n          longTasks.push(duration);\n        }\n      });\n    });\n    observer.observe({ type: \"longtask\", buffered: true });\n    perf.metrics.LongTasks = longTasks;\n  };\n\n  /** Long Animation Frame (LoAF) Monitoring **/\n  perf.monitorLoAF = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"long-animation-frame\")) return;\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        const { duration, blockingDuration, renderTime, styleAndLayoutDuration } = entry;\n        const safeNumber = (num) => Number.isFinite(num) ? Math.round(num) : \"N/A\";\n        let messages = [\n          `Duration: ${safeNumber(duration)}ms, Blocking: ${safeNumber(blockingDuration)}ms`,\n          `Render: ${safeNumber(renderTime)}ms, Layout: ${safeNumber(styleAndLayoutDuration)}ms`\n        ];\n        if (renderTime === undefined || styleAndLayoutDuration === undefined) {\n          messages.push(\"Note: Browser does not support detailed render/layout metrics for LoAF entries.\");\n        }\n        messages.push(\"→ Investigate heavy scripts or CSS causing recalculations\");\n        perf.log(\"LoAF Detected\", messages);\n      });\n    });\n    observer.observe({ type: \"long-animation-frame\", buffered: true });\n  };\n\n  /** INP Monitoring **/\n  perf.monitorINP = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"event\")) return;\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (entry.duration > 300) {\n          let msg = [`${entry.name} delayed interaction response by ${Math.round(entry.duration)}ms`];\n          if (entry.target) {\n            try {\n              const html = entry.target.outerHTML?.slice(0, 100) || `[${entry.target.nodeName}]`;\n              msg.push(`Element: ${html}`);\n              entry.target.style.outline = \"2px solid purple\";\n              setTimeout(() => entry.target.style.outline = \"\", 2500);\n            } catch (e) {\n              msg.push(\"Element: [unreadable]\");\n            }\n          }\n          msg.push(\"→ Optimize interaction handlers. Avoid blocking JS, reflows, and heavy tasks.\");\n          perf.log(\"INP Interaction Issue\", msg);\n          perf.metrics.INP = Math.round(entry.duration);\n        }\n      });\n    });\n    observer.observe({ type: \"event\", durationThreshold: 300, buffered: true });\n  };\n\n  /** Largest Contentful Paint (LCP) Monitoring **/\n  perf.monitorLCP = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"largest-contentful-paint\")) return;\n    let lcpEntry;\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        lcpEntry = entry;\n        console.debug(\"[KanmiPerf Debug] LCP entry captured:\", entry);\n      });\n    });\n    observer.observe({ type: \"largest-contentful-paint\", buffered: true });\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"hidden\" && lcpEntry) {\n        const lcpTime = Math.round(lcpEntry.renderTime || lcpEntry.loadTime);\n        let elementInfo = lcpEntry.element ? lcpEntry.element.outerHTML.slice(0, 100) : \"N/A\";\n        if (lcpEntry.element) {\n          lcpEntry.element.style.outline = \"2px solid red\";\n          setTimeout(() => { lcpEntry.element.style.outline = \"\"; }, 3000);\n        }\n        perf.log(\"LCP\", [\n          `Largest Contentful Paint: ${lcpTime}ms`,\n          `Element: ${elementInfo}`,\n          \"→ Optimize images, text, and video content for faster loading\"\n        ]);\n        perf.metrics.LCP = lcpTime;\n      }\n    });\n  };\n\n  /** Cumulative Layout Shift (CLS) Monitoring **/\n  perf.monitorCLS = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"layout-shift\")) return;\n    let clsValue = 0;\n    let clsSources = [];\n    const shiftNodes = [];\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (!entry.hadRecentInput && entry.value > 0) {\n          clsValue += entry.value;\n          (entry.sources || []).slice(0, 3).forEach(src => {\n            try {\n              if (src.node && src.node.outerHTML) {\n                clsSources.push(src.node.outerHTML.slice(0, 100));\n                shiftNodes.push(src.node);\n              } else {\n                clsSources.push(\"[Unknown Source]\");\n              }\n            } catch (e) {\n              clsSources.push(\"[Error Reading Source]\");\n            }\n          });\n          console.debug(\"[KanmiPerf Debug] Layout shift entry:\", entry);\n        }\n      });\n    });\n    observer.observe({ type: \"layout-shift\", buffered: true });\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"hidden\") {\n        const roundedCLS = +clsValue.toFixed(3);\n        let verdict = \"Good\";\n        if (roundedCLS > 0.25) verdict = \"Poor\";\n        else if (roundedCLS > 0.1) verdict = \"Needs Improvement\";\n        const messages = [\n          `Cumulative Layout Shift: ${roundedCLS} (${verdict})`,\n          \"→ Consider reserving space for images, ads, embeds, or dynamic content to reduce unexpected shifts.\"\n        ];\n        if (clsSources.length) {\n          messages.push(`Top shifting elements: ${clsSources.join(\" | \")}`);\n        }\n        perf.log(\"CLS\", messages);\n        perf.metrics.CLS = roundedCLS;\n        shiftNodes.forEach(node => {\n          if (node && node.style) {\n            node.style.outline = \"2px dashed orange\";\n            setTimeout(() => node.style.outline = \"\", 3000);\n          }\n        });\n      }\n    });\n  };\n\n  /** Merged TTFB & <head> Analysis **/\n  perf.timingAnalysis = () => {\n    const navEntry = performance.getEntriesByType(\"navigation\")[0];\n    if (navEntry) {\n      const ttfb = Math.round(navEntry.responseStart);\n      // Use configurable thresholds for TTFB if provided.\n      const ttfbThresholds = KanmiPerfConfig.thresholds.TTFB;\n      const suggestions = [`Time To First Byte: ${ttfb}ms`];\n      if (ttfb <= ttfbThresholds.good) {\n        suggestions.push(\"TTFB is in the Good range.\");\n      } else if (ttfb <= ttfbThresholds.needsImprovement) {\n        suggestions.push(\"→ TTFB is slightly high. Review server response time and cache strategy.\");\n      } else {\n        suggestions.push(\"→ TTFB is very high. Optimize backend performance, CDN, and server-side rendering.\");\n      }\n      // Integrated head analysis:\n      const headHTML = document.head?.outerHTML || \"\";\n      const headSizeKB = (headHTML.length / 1024).toFixed(1);\n      if (headHTML.length > 10000) {\n        suggestions.push(`→ The <head> section is large (${headSizeKB} KB). Consider optimizing it.`);\n      }\n      // Further breakdown of <head> content:\n      const scriptTags = document.head.querySelectorAll(\"script\").length;\n      const inlineScripts = document.head.querySelectorAll(\"script:not([src])\").length;\n      const stylesheets = document.head.querySelectorAll(\"link[rel='stylesheet']\").length;\n      const styleBlocks = document.head.querySelectorAll(\"style\").length;\n      const preloadLinks = document.head.querySelectorAll(\"link[rel='preload']\").length;\n      if (scriptTags > 5) {\n        suggestions.push(`→ There are ${scriptTags} <script> tags in <head>. Consider deferring non-critical JS.`);\n      }\n      if (inlineScripts > 1) {\n        suggestions.push(`→ Multiple inline <script> blocks found. Consider externalizing where possible.`);\n      }\n      if (stylesheets > 3) {\n        suggestions.push(`→ ${stylesheets} stylesheets detected. Consolidate critical CSS to reduce requests.`);\n      }\n      if (styleBlocks > 1) {\n        suggestions.push(`→ ${styleBlocks} <style> blocks found. Inline styles can delay parsing.`);\n      }\n      if (preloadLinks > 5) {\n        suggestions.push(`→ ${preloadLinks} preload tags found. Verify they are used early to avoid wasted bytes.`);\n      }\n      perf.log(\"TTFB & <head> Analysis\", suggestions);\n      perf.metrics.TTFB = ttfb;\n    }\n  };\n\n  /** First Contentful Paint (FCP) Monitoring **/\n  perf.monitorFCP = () => {\n    if (!PerformanceObserver.supportedEntryTypes.includes(\"paint\")) return;\n    let fcpEntry;\n    const observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        if (entry.name === \"first-contentful-paint\") {\n          fcpEntry = entry;\n        }\n      });\n    });\n    observer.observe({ type: \"paint\", buffered: true });\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"hidden\" && fcpEntry) {\n        const fcpTime = Math.round(fcpEntry.startTime);\n        perf.log(\"FCP\", [\n          `First Contentful Paint: ${fcpTime}ms`,\n          \"→ Ensure critical resources are loaded efficiently.\"\n        ]);\n        perf.metrics.FCP = fcpTime;\n      }\n    });\n  };\n\n  /** Timeline Debug **/\n  perf.analyzeTimeline = () => {\n    if (perf.timeline.length > 1) {\n      const sorted = [...perf.timeline].sort((a, b) => a.time - b.time);\n      const baseTime = sorted[0].time;\n      const timelineReport = sorted.map((event, i) => {\n        const delta = Math.round(event.time - baseTime);\n        return `${i + 1}. ${event.type} ➜ ${delta}ms`;\n      });\n      perf.log(\"Timeline Report\", timelineReport);\n    } else {\n      perf.log(\"Timeline Report\", [\"Insufficient data to generate timeline\"]);\n    }\n  };\n\n  /** Run All Analyses Manually **/\n  perf.run = () => {\n    perf.domAnalysis();\n    perf.headAnalysis();\n    perf.thirdPartyAnalysis();\n    perf.monitorLongTasks();\n    perf.monitorLoAF();\n    perf.monitorINP();\n    perf.monitorLCP();\n    perf.monitorCLS();\n    perf.timingAnalysis();\n    perf.monitorFCP();\n  };\n\n  /** Initialization **/\n  /**\n   * Initialise KanmiPerf Pro\n   * @param {Object} [options]\n   * @param {string} [options.licenseKey] – your KanmiPerf Pro licence key\n   *\n   * A key can also be set globally as `window.KanmiPerfProLicenseKey`.\n   */\n  perf.init = async (options = {}) => {\n    const key = options.licenseKey || window.KanmiPerfProLicenseKey;\n    if (!key) {\n      console.error(\n        '[KanmiPerf Pro] ⚠️ No licenceKey provided. Purchase one at https://kanmiperf.com/pricing'\n      );\n      return;\n    }\n\n    const valid = await validateLicense(key);\n    if (!valid) {\n      console.error('[KanmiPerf Pro] ⚠️ Licence key invalid. Aborting run.');\n      return;\n    }\n\n    // Original bootstrap\n    if (document.readyState === 'complete') {\n      perf.run();\n    } else {\n      window.addEventListener('load', perf.run);\n    }\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'hidden') {\n        perf.analyzeTimeline();\n      }\n    });\n  };\n\n// Global error monitoring to capture unhandled errors.\n  window.onerror = (msg, url, lineNo, columnNo, error) => {\n    const errorMessage = `${msg} at ${url}:${lineNo}:${columnNo}`;\n    perf.log(\"JS Error\", [errorMessage]);\n    return false;\n  };\n\n  window.KanmiPerf = perf;\n  return perf;\n};\nconst KanmiPerfInstance = KanmiPerf();\nexport default KanmiPerfInstance;"],"names":["KanmiPerfConfig","LCP","good","needsImprovement","CLS","TTFB","INP","FCP","LongTasks","__kanmiPerfLicenseValid","KanmiPerfInstance","perf","window","__kanmiVitalsLog","timeline","metrics","issues","log","type","timestamp","Date","toISOString","console","groupCollapsed","forEach","issue","groupEnd","push","time","performance","now","msg","domAnalysis","imgs","document","querySelectorAll","length","headAnalysis","suggestions","blockingScripts","head","filter","script","defer","async","map","src","headHTML","outerHTML","headSizeKB","toFixed","thirdPartyAnalysis","host","location","hostname","syncScripts","scripts","s","includes","URL","monitorLongTasks","longTasks","PerformanceObserver","list","getEntries","entry","duration","Math","round","verdict","observe","buffered","monitorLoAF","supportedEntryTypes","blockingDuration","renderTime","styleAndLayoutDuration","safeNumber","num","Number","isFinite","messages","undefined","monitorINP","name","target","html","slice","nodeName","style","outline","setTimeout","e","durationThreshold","monitorLCP","lcpEntry","debug","addEventListener","visibilityState","lcpTime","loadTime","elementInfo","element","monitorCLS","clsValue","clsSources","shiftNodes","hadRecentInput","value","sources","node","roundedCLS","join","timingAnalysis","navEntry","getEntriesByType","ttfb","responseStart","ttfbThresholds","scriptTags","inlineScripts","stylesheets","styleBlocks","preloadLinks","monitorFCP","fcpEntry","fcpTime","startTime","analyzeTimeline","sorted","sort","a","b","baseTime","timelineReport","event","i","delta","run","init","options","key","licenseKey","KanmiPerfProLicenseKey","error","valid","res","fetch","encodeURIComponent","data","json","err","warn","validateLicense","readyState","onerror","url","lineNo","columnNo","errorMessage","KanmiPerf"],"mappings":"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"}