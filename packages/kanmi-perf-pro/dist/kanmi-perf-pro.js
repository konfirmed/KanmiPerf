var KanmiPerfPro=function(){"use strict";const e={TTFB:{good:800,needsImprovement:1800}};return(()=>{const t={};return window.__kanmiVitalsLog=window.__kanmiVitalsLog||[],t.timeline=[],t.metrics={FCP:0,LCP:0,CLS:0,INP:0,TTFB:0,LongTasks:[]},t.issues=[],t.log=(e,n)=>{const r=(new Date).toISOString();console.groupCollapsed(`[KanmiPerf 🚀] ⚠️ ${e} at ${r}`),n.forEach((e=>console.log(`- ${e}`))),console.groupEnd(),window.__kanmiVitalsLog.push({type:e,issues:n,timestamp:r}),t.timeline.push({type:e,issues:n,time:performance.now()}),n.forEach((n=>{t.issues.push(`[${e}] ${n}`)}))},t.domAnalysis=()=>{const e=[...document.querySelectorAll("img:not([width]), img:not([height])")];e.length&&t.log("DOM Issues",[`${e.length} image${e.length>1?"s":""} missing dimensions (causes CLS)`])},t.headAnalysis=()=>{const e=[],n=[...document.head.querySelectorAll("script[src]")].filter((e=>!e.defer&&!e.async));n.length&&e.push(`${n.length} blocking script${n.length>1?"s":""} without async/defer`,...n.map((e=>`Suggest moving ${e.src} lower or load it with async/defer`)));const r=document.head?.outerHTML||"",o=(r.length/1024).toFixed(1);r.length>8e3&&e.push(`The <head> section is large (${o} KB)`,"→ Consider optimizing it."),e.length>0&&t.log("<head> Issues",e)},t.thirdPartyAnalysis=()=>{const e=location.hostname,n=[...document.scripts].filter((t=>t.src&&!t.src.includes(e))).filter((e=>!e.defer&&!e.async));n.length&&t.log("Third-party Issues",n.map((e=>`${new URL(e.src).hostname} synchronously loaded, delays rendering → Suggest loading async/defer or using Partytown`)))},t.monitorLongTasks=()=>{if(!("PerformanceObserver"in window))return;const e=[];new PerformanceObserver((n=>{n.getEntries().forEach((n=>{if(n.duration>50){const r=Math.round(n.duration);let o="🟡 Minor";r>200?o="🚨 Severe":r>125&&(o="⚠️ Moderate"),t.log("Long Task",[`${o} – Main thread blocked for ${r}ms`,"→ Break into smaller functions, use requestIdleCallback or Web Workers for heavy work"]),e.push(r)}}))})).observe({type:"longtask",buffered:!0}),t.metrics.LongTasks=e},t.monitorLoAF=()=>{if(!PerformanceObserver.supportedEntryTypes.includes("long-animation-frame"))return;new PerformanceObserver((e=>{e.getEntries().forEach((e=>{const{duration:n,blockingDuration:r,renderTime:o,styleAndLayoutDuration:s}=e,i=e=>Number.isFinite(e)?Math.round(e):"N/A";let a=[`Duration: ${i(n)}ms, Blocking: ${i(r)}ms`,`Render: ${i(o)}ms, Layout: ${i(s)}ms`];void 0!==o&&void 0!==s||a.push("Note: Browser does not support detailed render/layout metrics for LoAF entries."),a.push("→ Investigate heavy scripts or CSS causing recalculations"),t.log("LoAF Detected",a)}))})).observe({type:"long-animation-frame",buffered:!0})},t.monitorINP=()=>{if(!PerformanceObserver.supportedEntryTypes.includes("event"))return;new PerformanceObserver((e=>{e.getEntries().forEach((e=>{if(e.duration>300){let n=[`${e.name} delayed interaction response by ${Math.round(e.duration)}ms`];if(e.target)try{const t=e.target.outerHTML?.slice(0,100)||`[${e.target.nodeName}]`;n.push(`Element: ${t}`),e.target.style.outline="2px solid purple",setTimeout((()=>e.target.style.outline=""),2500)}catch(e){n.push("Element: [unreadable]")}n.push("→ Optimize interaction handlers. Avoid blocking JS, reflows, and heavy tasks."),t.log("INP Interaction Issue",n),t.metrics.INP=Math.round(e.duration)}}))})).observe({type:"event",durationThreshold:300,buffered:!0})},t.monitorLCP=()=>{if(!PerformanceObserver.supportedEntryTypes.includes("largest-contentful-paint"))return;let e;new PerformanceObserver((t=>{t.getEntries().forEach((t=>{e=t,console.debug("[KanmiPerf Debug] LCP entry captured:",t)}))})).observe({type:"largest-contentful-paint",buffered:!0}),document.addEventListener("visibilitychange",(()=>{if("hidden"===document.visibilityState&&e){const n=Math.round(e.renderTime||e.loadTime);let r=e.element?e.element.outerHTML.slice(0,100):"N/A";e.element&&(e.element.style.outline="2px solid red",setTimeout((()=>{e.element.style.outline=""}),3e3)),t.log("LCP",[`Largest Contentful Paint: ${n}ms`,`Element: ${r}`,"→ Optimize images, text, and video content for faster loading"]),t.metrics.LCP=n}}))},t.monitorCLS=()=>{if(!PerformanceObserver.supportedEntryTypes.includes("layout-shift"))return;let e=0,n=[];const r=[];new PerformanceObserver((t=>{t.getEntries().forEach((t=>{!t.hadRecentInput&&t.value>0&&(e+=t.value,(t.sources||[]).slice(0,3).forEach((e=>{try{e.node&&e.node.outerHTML?(n.push(e.node.outerHTML.slice(0,100)),r.push(e.node)):n.push("[Unknown Source]")}catch(e){n.push("[Error Reading Source]")}})),console.debug("[KanmiPerf Debug] Layout shift entry:",t))}))})).observe({type:"layout-shift",buffered:!0}),document.addEventListener("visibilitychange",(()=>{if("hidden"===document.visibilityState){const o=+e.toFixed(3);let s="Good";o>.25?s="Poor":o>.1&&(s="Needs Improvement");const i=[`Cumulative Layout Shift: ${o} (${s})`,"→ Consider reserving space for images, ads, embeds, or dynamic content to reduce unexpected shifts."];n.length&&i.push(`Top shifting elements: ${n.join(" | ")}`),t.log("CLS",i),t.metrics.CLS=o,r.forEach((e=>{e&&e.style&&(e.style.outline="2px dashed orange",setTimeout((()=>e.style.outline=""),3e3))}))}}))},t.timingAnalysis=()=>{const n=performance.getEntriesByType("navigation")[0];if(n){const r=Math.round(n.responseStart),o=e.TTFB,s=[`Time To First Byte: ${r}ms`];r<=o.good?s.push("TTFB is in the Good range."):r<=o.needsImprovement?s.push("→ TTFB is slightly high. Review server response time and cache strategy."):s.push("→ TTFB is very high. Optimize backend performance, CDN, and server-side rendering.");const i=document.head?.outerHTML||"",a=(i.length/1024).toFixed(1);i.length>1e4&&s.push(`→ The <head> section is large (${a} KB). Consider optimizing it.`);const l=document.head.querySelectorAll("script").length,d=document.head.querySelectorAll("script:not([src])").length,u=document.head.querySelectorAll("link[rel='stylesheet']").length,c=document.head.querySelectorAll("style").length,m=document.head.querySelectorAll("link[rel='preload']").length;l>5&&s.push(`→ There are ${l} <script> tags in <head>. Consider deferring non-critical JS.`),d>1&&s.push("→ Multiple inline <script> blocks found. Consider externalizing where possible."),u>3&&s.push(`→ ${u} stylesheets detected. Consolidate critical CSS to reduce requests.`),c>1&&s.push(`→ ${c} <style> blocks found. Inline styles can delay parsing.`),m>5&&s.push(`→ ${m} preload tags found. Verify they are used early to avoid wasted bytes.`),t.log("TTFB & <head> Analysis",s),t.metrics.TTFB=r}},t.monitorFCP=()=>{if(!PerformanceObserver.supportedEntryTypes.includes("paint"))return;let e;new PerformanceObserver((t=>{t.getEntries().forEach((t=>{"first-contentful-paint"===t.name&&(e=t)}))})).observe({type:"paint",buffered:!0}),document.addEventListener("visibilitychange",(()=>{if("hidden"===document.visibilityState&&e){const n=Math.round(e.startTime);t.log("FCP",[`First Contentful Paint: ${n}ms`,"→ Ensure critical resources are loaded efficiently."]),t.metrics.FCP=n}}))},t.analyzeTimeline=()=>{if(t.timeline.length>1){const e=[...t.timeline].sort(((e,t)=>e.time-t.time)),n=e[0].time,r=e.map(((e,t)=>{const r=Math.round(e.time-n);return`${t+1}. ${e.type} ➜ ${r}ms`}));t.log("Timeline Report",r)}else t.log("Timeline Report",["Insufficient data to generate timeline"])},t.run=()=>{t.domAnalysis(),t.headAnalysis(),t.thirdPartyAnalysis(),t.monitorLongTasks(),t.monitorLoAF(),t.monitorINP(),t.monitorLCP(),t.monitorCLS(),t.timingAnalysis(),t.monitorFCP()},t.init=()=>{"complete"===document.readyState?t.run():window.addEventListener("load",t.run),document.addEventListener("visibilitychange",(()=>{"hidden"===document.visibilityState&&t.analyzeTimeline()}))},window.onerror=(e,n,r,o,s)=>{const i=`${e} at ${n}:${r}:${o}`;return t.log("JS Error",[i]),!1},window.KanmiPerf=t,t})()}();
//# sourceMappingURL=kanmi-perf-pro.js.map
